// [1, 2, 3]
: ?test_array_basic(int[]).

// [5, 4, -5]
// [5, 5, -5]
: ?test_array_with_domain(int[]).

?test_array_basic(arr) {
    int[][] _a = [100, 200, 300] -> fail();
    int[][] _a = [[1, 2], [3]];
    arr = [1, 2, 3];
}

?test_array_with_domain(arr) {
    int c = <3..5;
    arr = [5, c, -5];
    arr?;
}

// 1
// 2
// 3
: ?test_array_each(int).

?test_array_each(x) {
    int[] arr = [1, 2, 3];
    x = each of arr;
}

// [1, 2]
// [3, 4]
// [5]
: ?test_array_each_2(int[]).

?test_array_each_2(element) {
    int[][] arr = [[1, 2], [3, 4], [5]];
    int[] x = [1, 2];
    each of arr = x -> fail();
    int[][] arr2 = [[1, 2], [1, 2], [1, 2]];
    each of arr2 = x;
    int one = 1;
    each of arr2 = one -> fail();
    int[] arr3 = [1, 1, 1];
    each(arr3) = one;
    element = each(arr);
}

// []
// [1]
// [1, 1]
// [1, 1, 1]
// ...
: ?test_array_each_gen_array(int[]).

?test_array_each_gen_array(arr) {
    int element = 1;
    element = each(arr);
    arr?;
}

// 5
// -1
// 3
// 5
: ?test_array_by_idx(int).

?test_array_by_idx(x) {
    int[] arr = [1, 2, 3, 5, 8, 13, 21];
    arr by_idx 3 = x;
    y ~ int;
    arr by_idx x = y;
    &all y {
        y = 13;
    }
}

?test_array_by_idx(-1).

?test_array_by_idx(x) {
    int[] arr = [1, 2, 3, 5, 8, 5, 3, 2, 1];
    int el = 5;
    arr by_idx x = el;
}

: ?test_array_length().
?test_array_length() {
    int[] arr = [100, 200, 300];
    length of arr = x;
    &all x {x = 3};
}

// [2, 2, 2]
// [2, 2, 3]
// [2, 3, 2]
// [2, 3, 3]
// [3, 2, 2]
// [3, 2, 3]
// [3, 3, 2]
// [3, 3, 3]
: ?test_array_length_gen_array(int[]).

?test_array_length_gen_array(x) {
    int el = <1..3;
    arr ~ el[];
    length of arr = 3;
    x = arr;
}


// [];0
// [3];1
// [4];1
// [5];1
// [3, 3];2
// [3, 4];2
// [3, 5];2
// [4, 3];2
// ...
: ?test_array_length_genall(int[], int).

?test_array_length_genall(final, len) {
    int el = 3..5;
    arr ~ el[];
    length of arr = len;
    final = arr;
}

// 2
// 1
// 5
: ?test_array_by_idx_syntax(int).
?test_array_by_idx_syntax(x) {
    int[] arr = [1, 2, 3];
    arr[1] = x;
}
?test_array_by_idx_syntax(idx) {
    int[] arr = [1, 4, 3, 8, -4, 4];
    int seek = 4;
    arr[idx] = seek;
}

: ?test_array_no_repeat().
?test_array_no_repeat() {
    no_repeat{int}([1, 2, 3]);
    no_repeat{int}([1, 2, 2]) -> fail();
    no_repeat{int}([1, 1, 2]) -> fail();
    no_repeat{int} of [];
    no_repeat{int} of [1];
    no_repeat{int} of [1, 2];
    no_repeat{int} of [1, 1] -> fail();
}


// [1, 2, 3, 4, 5]
// []
// [1]
// [3]

: ?test_array_append(int[]).

?test_array_append(x) { append{int}([1,2], [3,4,5]) = x }
?test_array_append(x) { append{int}([], []) = x }
?test_array_append(x) {
    append{int}([1,2], [3]) = [1] -> fail();
    append{int}(x, [2,3]) = [1,2,3];
}
?test_array_append(x) {
    append{int}([1, 2], x) = [1, 2, 3];
}

// [1, 2, 3, 4, 5]
: ?test_array_flatten(int[]).
?test_array_flatten(arr2) {
    int[][] arr = [[1,2], [], [3,4,5]];
    arr2 = flatten(arr);
}

// []
// [1, 2]
// [1, 2, 3]
// [1, 1, 2, 3]
// [1, 2, 1, 2, 3]
// [3, 4]
: ?test_array_head_tail(int[]).
?test_array_head_tail([|]).
?test_array_head_tail([1,2|]).
?test_array_head_tail([|[1,2,3]]).
?test_array_head_tail([1|[1,2,3]]).
?test_array_head_tail([1,2|[1,2,3]]).
?test_array_head_tail(x) {
    [1, 2, 3, 4] = [1, 2|x];
}

// [2, 2, 2]
// [5, -10, 3]
// [5, -10, 4]
: ?test_array_sized(int[]).
?test_array_sized(arr) {
    x = between(1, 3);
    a ~ x[3];
    a?;
    arr = a;
}

?test_array_sized(arr) {
    a ~ int[3];
    a[0] = 5;
    a[1] = -10;
    x = between(2, 5);
    a[2] = x;
    a?;
    arr = a;
}

// 4
: ?test_array_nested_by_idx(int).
?test_array_nested_by_idx(x) {
    int[][] arr = [[1,2,3],[4,5,6]];
    x = arr[1][0];
}